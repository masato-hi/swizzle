name: test

on:
  push:
  schedule:
    - cron: "0 10 * * 5" # JST 19:00 (Fri)

env:
  CI: "true"

jobs:
  test:
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false

      matrix:
        ruby:
          - 2.4.0
          - 2.5.0
          - 2.6.0
          - 2.7.0
          - 3.0.0
        include:
          - ruby: 2.4.0
            runner: ubuntu-latest
          - ruby: 2.5.0
            runner: ubuntu-latest
          - ruby: 2.6.0
            runner: ubuntu-latest
          - ruby: 2.7.0
            runner: ubuntu-latest
          - ruby: 3.0.0
            runner: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up rbenv
        uses: masa-iwasaki/setup-rbenv@1.1.0

      - name: Cache RBENV_ROOT
        uses: actions/cache@v1
        id: cache_rbenv
        with:
          path: ~/.rbenv/versions
          key: v1-rbenv-${{ runner.os }}-${{ matrix.ruby }}
        if: "!endsWith(matrix.ruby, '-dev')"

      - name: Install Ruby
        run: |
          set -xe
          eval "$(rbenv init -)"
          rbenv install -s $RBENV_VERSION

          gem install bundler --no-document || true
        env:
          RBENV_VERSION: ${{ matrix.ruby }}
        continue-on-error: ${{ endsWith(matrix.ruby, '-dev') }}

      - name: Cache vendor/bundle
        uses: actions/cache@v1
        id: cache_gem
        with:
          path: vendor/bundle
          key: v1-gem-${{ runner.os }}-${{ matrix.ruby }}-${{ github.sha }}
          restore-keys: |
            v1-gem-${{ runner.os }}-${{ matrix.ruby }}-
        continue-on-error: ${{ endsWith(matrix.ruby, '-dev') }}

      - name: bundle update
        run: |
          set -xe
          eval "$(rbenv init -)"
          bundle config path vendor/bundle
          bundle update --jobs $(nproc) --retry 3
        env:
          RBENV_VERSION: ${{ matrix.ruby }}
        continue-on-error: ${{ endsWith(matrix.ruby, '-dev') }}

      - name: Run test
        run: |
          set -xe
          eval "$(rbenv init -)"
          bundle exec rspec
        env:
          RBENV_VERSION: ${{ matrix.ruby }}
        continue-on-error: ${{ endsWith(matrix.ruby, '-dev') }}

      - name: Run rubocop
        run: |
          set -xe
          eval "$(rbenv init -)"
          bundle exec rubocop
        env:
          RBENV_VERSION: ${{ matrix.ruby }}
        continue-on-error: ${{ endsWith(matrix.ruby, '-dev') }}
